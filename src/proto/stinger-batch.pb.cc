// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/proto/stinger-batch.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "src/proto/stinger-batch.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace gt {
namespace stinger {

namespace {

const ::google::protobuf::Descriptor* EdgeInsertion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EdgeInsertion_reflection_ = NULL;
const ::google::protobuf::Descriptor* EdgeDeletion_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EdgeDeletion_reflection_ = NULL;
const ::google::protobuf::Descriptor* StingerBatch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StingerBatch_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* BatchType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_src_2fproto_2fstinger_2dbatch_2eproto() {
  protobuf_AddDesc_src_2fproto_2fstinger_2dbatch_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "src/proto/stinger-batch.proto");
  GOOGLE_CHECK(file != NULL);
  EdgeInsertion_descriptor_ = file->message_type(0);
  static const int EdgeInsertion_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeInsertion, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeInsertion, type_str_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeInsertion, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeInsertion, source_str_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeInsertion, destination_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeInsertion, destination_str_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeInsertion, weight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeInsertion, time_),
  };
  EdgeInsertion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EdgeInsertion_descriptor_,
      EdgeInsertion::default_instance_,
      EdgeInsertion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeInsertion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeInsertion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EdgeInsertion));
  EdgeDeletion_descriptor_ = file->message_type(1);
  static const int EdgeDeletion_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeDeletion, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeDeletion, type_str_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeDeletion, source_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeDeletion, source_str_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeDeletion, destination_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeDeletion, destination_str_),
  };
  EdgeDeletion_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EdgeDeletion_descriptor_,
      EdgeDeletion::default_instance_,
      EdgeDeletion_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeDeletion, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdgeDeletion, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EdgeDeletion));
  StingerBatch_descriptor_ = file->message_type(2);
  static const int StingerBatch_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StingerBatch, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StingerBatch, keep_alive_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StingerBatch, insertions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StingerBatch, deletions_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StingerBatch, make_undirected_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StingerBatch, type_),
  };
  StingerBatch_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      StingerBatch_descriptor_,
      StingerBatch::default_instance_,
      StingerBatch_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StingerBatch, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StingerBatch, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(StingerBatch));
  BatchType_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_src_2fproto_2fstinger_2dbatch_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EdgeInsertion_descriptor_, &EdgeInsertion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EdgeDeletion_descriptor_, &EdgeDeletion::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    StingerBatch_descriptor_, &StingerBatch::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_src_2fproto_2fstinger_2dbatch_2eproto() {
  delete EdgeInsertion::default_instance_;
  delete EdgeInsertion_reflection_;
  delete EdgeDeletion::default_instance_;
  delete EdgeDeletion_reflection_;
  delete StingerBatch::default_instance_;
  delete StingerBatch_reflection_;
}

void protobuf_AddDesc_src_2fproto_2fstinger_2dbatch_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\035src/proto/stinger-batch.proto\022\ngt.stin"
    "ger\"\264\001\n\rEdgeInsertion\022\017\n\004type\030\007 \001(\003:\0010\022\022"
    "\n\010type_str\030\010 \001(\t:\000\022\021\n\006source\030\001 \001(\003:\0010\022\024\n"
    "\nsource_str\030\002 \001(\t:\000\022\026\n\013destination\030\003 \001(\003"
    ":\0011\022\031\n\017destination_str\030\004 \001(\t:\000\022\021\n\006weight"
    "\030\005 \001(\003:\0011\022\017\n\004time\030\006 \001(\003:\0011\"\217\001\n\014EdgeDelet"
    "ion\022\017\n\004type\030\005 \001(\003:\0010\022\022\n\010type_str\030\006 \001(\t:\000"
    "\022\021\n\006source\030\001 \001(\003:\0010\022\024\n\nsource_str\030\002 \001(\t:"
    "\000\022\026\n\013destination\030\003 \001(\003:\0011\022\031\n\017destination"
    "_str\030\004 \001(\t:\000\"\353\001\n\014StingerBatch\022\022\n\007version"
    "\030\001 \001(\003:\0011\022\031\n\nkeep_alive\030\007 \001(\010:\005false\022-\n\n"
    "insertions\030\003 \003(\0132\031.gt.stinger.EdgeInsert"
    "ion\022+\n\tdeletions\030\004 \003(\0132\030.gt.stinger.Edge"
    "Deletion\022\035\n\017make_undirected\030\005 \001(\010:\004true\022"
    "1\n\004type\030\006 \001(\0162\025.gt.stinger.BatchType:\014NU"
    "MBERS_ONLY*:\n\tBatchType\022\020\n\014NUMBERS_ONLY\020"
    "\000\022\020\n\014STRINGS_ONLY\020\001\022\t\n\005MIXED\020\002", 670);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "src/proto/stinger-batch.proto", &protobuf_RegisterTypes);
  EdgeInsertion::default_instance_ = new EdgeInsertion();
  EdgeDeletion::default_instance_ = new EdgeDeletion();
  StingerBatch::default_instance_ = new StingerBatch();
  EdgeInsertion::default_instance_->InitAsDefaultInstance();
  EdgeDeletion::default_instance_->InitAsDefaultInstance();
  StingerBatch::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_src_2fproto_2fstinger_2dbatch_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_src_2fproto_2fstinger_2dbatch_2eproto {
  StaticDescriptorInitializer_src_2fproto_2fstinger_2dbatch_2eproto() {
    protobuf_AddDesc_src_2fproto_2fstinger_2dbatch_2eproto();
  }
} static_descriptor_initializer_src_2fproto_2fstinger_2dbatch_2eproto_;
const ::google::protobuf::EnumDescriptor* BatchType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return BatchType_descriptor_;
}
bool BatchType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int EdgeInsertion::kTypeFieldNumber;
const int EdgeInsertion::kTypeStrFieldNumber;
const int EdgeInsertion::kSourceFieldNumber;
const int EdgeInsertion::kSourceStrFieldNumber;
const int EdgeInsertion::kDestinationFieldNumber;
const int EdgeInsertion::kDestinationStrFieldNumber;
const int EdgeInsertion::kWeightFieldNumber;
const int EdgeInsertion::kTimeFieldNumber;
#endif  // !_MSC_VER

EdgeInsertion::EdgeInsertion()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EdgeInsertion::InitAsDefaultInstance() {
}

EdgeInsertion::EdgeInsertion(const EdgeInsertion& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EdgeInsertion::SharedCtor() {
  _cached_size_ = 0;
  type_ = GOOGLE_LONGLONG(0);
  type_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  source_ = GOOGLE_LONGLONG(0);
  source_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  destination_ = GOOGLE_LONGLONG(1);
  destination_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  weight_ = GOOGLE_LONGLONG(1);
  time_ = GOOGLE_LONGLONG(1);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EdgeInsertion::~EdgeInsertion() {
  SharedDtor();
}

void EdgeInsertion::SharedDtor() {
  if (type_str_ != &::google::protobuf::internal::kEmptyString) {
    delete type_str_;
  }
  if (source_str_ != &::google::protobuf::internal::kEmptyString) {
    delete source_str_;
  }
  if (destination_str_ != &::google::protobuf::internal::kEmptyString) {
    delete destination_str_;
  }
  if (this != default_instance_) {
  }
}

void EdgeInsertion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EdgeInsertion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EdgeInsertion_descriptor_;
}

const EdgeInsertion& EdgeInsertion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_src_2fproto_2fstinger_2dbatch_2eproto();
  return *default_instance_;
}

EdgeInsertion* EdgeInsertion::default_instance_ = NULL;

EdgeInsertion* EdgeInsertion::New() const {
  return new EdgeInsertion;
}

void EdgeInsertion::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = GOOGLE_LONGLONG(0);
    if (has_type_str()) {
      if (type_str_ != &::google::protobuf::internal::kEmptyString) {
        type_str_->clear();
      }
    }
    source_ = GOOGLE_LONGLONG(0);
    if (has_source_str()) {
      if (source_str_ != &::google::protobuf::internal::kEmptyString) {
        source_str_->clear();
      }
    }
    destination_ = GOOGLE_LONGLONG(1);
    if (has_destination_str()) {
      if (destination_str_ != &::google::protobuf::internal::kEmptyString) {
        destination_str_->clear();
      }
    }
    weight_ = GOOGLE_LONGLONG(1);
    time_ = GOOGLE_LONGLONG(1);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EdgeInsertion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 source = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &source_)));
          set_has_source();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_source_str;
        break;
      }

      // optional string source_str = 2 [default = ""];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_source_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->source_str().data(), this->source_str().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_destination;
        break;
      }

      // optional int64 destination = 3 [default = 1];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_destination:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &destination_)));
          set_has_destination();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_destination_str;
        break;
      }

      // optional string destination_str = 4 [default = ""];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_destination_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destination_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->destination_str().data(), this->destination_str().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_weight;
        break;
      }

      // optional int64 weight = 5 [default = 1];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_weight:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &weight_)));
          set_has_weight();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_time;
        break;
      }

      // optional int64 time = 6 [default = 1];
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &time_)));
          set_has_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_type;
        break;
      }

      // optional int64 type = 7 [default = 0];
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_type_str;
        break;
      }

      // optional string type_str = 8 [default = ""];
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_type_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->type_str().data(), this->type_str().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EdgeInsertion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 source = 1 [default = 0];
  if (has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->source(), output);
  }

  // optional string source_str = 2 [default = ""];
  if (has_source_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->source_str().data(), this->source_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->source_str(), output);
  }

  // optional int64 destination = 3 [default = 1];
  if (has_destination()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->destination(), output);
  }

  // optional string destination_str = 4 [default = ""];
  if (has_destination_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->destination_str().data(), this->destination_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->destination_str(), output);
  }

  // optional int64 weight = 5 [default = 1];
  if (has_weight()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->weight(), output);
  }

  // optional int64 time = 6 [default = 1];
  if (has_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->time(), output);
  }

  // optional int64 type = 7 [default = 0];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(7, this->type(), output);
  }

  // optional string type_str = 8 [default = ""];
  if (has_type_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type_str().data(), this->type_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->type_str(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EdgeInsertion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 source = 1 [default = 0];
  if (has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->source(), target);
  }

  // optional string source_str = 2 [default = ""];
  if (has_source_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->source_str().data(), this->source_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->source_str(), target);
  }

  // optional int64 destination = 3 [default = 1];
  if (has_destination()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->destination(), target);
  }

  // optional string destination_str = 4 [default = ""];
  if (has_destination_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->destination_str().data(), this->destination_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->destination_str(), target);
  }

  // optional int64 weight = 5 [default = 1];
  if (has_weight()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->weight(), target);
  }

  // optional int64 time = 6 [default = 1];
  if (has_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->time(), target);
  }

  // optional int64 type = 7 [default = 0];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(7, this->type(), target);
  }

  // optional string type_str = 8 [default = ""];
  if (has_type_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type_str().data(), this->type_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->type_str(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EdgeInsertion::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 type = 7 [default = 0];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->type());
    }

    // optional string type_str = 8 [default = ""];
    if (has_type_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type_str());
    }

    // optional int64 source = 1 [default = 0];
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->source());
    }

    // optional string source_str = 2 [default = ""];
    if (has_source_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_str());
    }

    // optional int64 destination = 3 [default = 1];
    if (has_destination()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->destination());
    }

    // optional string destination_str = 4 [default = ""];
    if (has_destination_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->destination_str());
    }

    // optional int64 weight = 5 [default = 1];
    if (has_weight()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->weight());
    }

    // optional int64 time = 6 [default = 1];
    if (has_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->time());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EdgeInsertion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EdgeInsertion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EdgeInsertion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EdgeInsertion::MergeFrom(const EdgeInsertion& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_type_str()) {
      set_type_str(from.type_str());
    }
    if (from.has_source()) {
      set_source(from.source());
    }
    if (from.has_source_str()) {
      set_source_str(from.source_str());
    }
    if (from.has_destination()) {
      set_destination(from.destination());
    }
    if (from.has_destination_str()) {
      set_destination_str(from.destination_str());
    }
    if (from.has_weight()) {
      set_weight(from.weight());
    }
    if (from.has_time()) {
      set_time(from.time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EdgeInsertion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EdgeInsertion::CopyFrom(const EdgeInsertion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EdgeInsertion::IsInitialized() const {

  return true;
}

void EdgeInsertion::Swap(EdgeInsertion* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(type_str_, other->type_str_);
    std::swap(source_, other->source_);
    std::swap(source_str_, other->source_str_);
    std::swap(destination_, other->destination_);
    std::swap(destination_str_, other->destination_str_);
    std::swap(weight_, other->weight_);
    std::swap(time_, other->time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EdgeInsertion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EdgeInsertion_descriptor_;
  metadata.reflection = EdgeInsertion_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EdgeDeletion::kTypeFieldNumber;
const int EdgeDeletion::kTypeStrFieldNumber;
const int EdgeDeletion::kSourceFieldNumber;
const int EdgeDeletion::kSourceStrFieldNumber;
const int EdgeDeletion::kDestinationFieldNumber;
const int EdgeDeletion::kDestinationStrFieldNumber;
#endif  // !_MSC_VER

EdgeDeletion::EdgeDeletion()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void EdgeDeletion::InitAsDefaultInstance() {
}

EdgeDeletion::EdgeDeletion(const EdgeDeletion& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void EdgeDeletion::SharedCtor() {
  _cached_size_ = 0;
  type_ = GOOGLE_LONGLONG(0);
  type_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  source_ = GOOGLE_LONGLONG(0);
  source_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  destination_ = GOOGLE_LONGLONG(1);
  destination_str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EdgeDeletion::~EdgeDeletion() {
  SharedDtor();
}

void EdgeDeletion::SharedDtor() {
  if (type_str_ != &::google::protobuf::internal::kEmptyString) {
    delete type_str_;
  }
  if (source_str_ != &::google::protobuf::internal::kEmptyString) {
    delete source_str_;
  }
  if (destination_str_ != &::google::protobuf::internal::kEmptyString) {
    delete destination_str_;
  }
  if (this != default_instance_) {
  }
}

void EdgeDeletion::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EdgeDeletion::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EdgeDeletion_descriptor_;
}

const EdgeDeletion& EdgeDeletion::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_src_2fproto_2fstinger_2dbatch_2eproto();
  return *default_instance_;
}

EdgeDeletion* EdgeDeletion::default_instance_ = NULL;

EdgeDeletion* EdgeDeletion::New() const {
  return new EdgeDeletion;
}

void EdgeDeletion::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = GOOGLE_LONGLONG(0);
    if (has_type_str()) {
      if (type_str_ != &::google::protobuf::internal::kEmptyString) {
        type_str_->clear();
      }
    }
    source_ = GOOGLE_LONGLONG(0);
    if (has_source_str()) {
      if (source_str_ != &::google::protobuf::internal::kEmptyString) {
        source_str_->clear();
      }
    }
    destination_ = GOOGLE_LONGLONG(1);
    if (has_destination_str()) {
      if (destination_str_ != &::google::protobuf::internal::kEmptyString) {
        destination_str_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EdgeDeletion::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 source = 1 [default = 0];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &source_)));
          set_has_source();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_source_str;
        break;
      }

      // optional string source_str = 2 [default = ""];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_source_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->source_str().data(), this->source_str().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_destination;
        break;
      }

      // optional int64 destination = 3 [default = 1];
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_destination:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &destination_)));
          set_has_destination();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_destination_str;
        break;
      }

      // optional string destination_str = 4 [default = ""];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_destination_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_destination_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->destination_str().data(), this->destination_str().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_type;
        break;
      }

      // optional int64 type = 5 [default = 0];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_type_str;
        break;
      }

      // optional string type_str = 6 [default = ""];
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_type_str:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->type_str().data(), this->type_str().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void EdgeDeletion::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 source = 1 [default = 0];
  if (has_source()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->source(), output);
  }

  // optional string source_str = 2 [default = ""];
  if (has_source_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->source_str().data(), this->source_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->source_str(), output);
  }

  // optional int64 destination = 3 [default = 1];
  if (has_destination()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->destination(), output);
  }

  // optional string destination_str = 4 [default = ""];
  if (has_destination_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->destination_str().data(), this->destination_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->destination_str(), output);
  }

  // optional int64 type = 5 [default = 0];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->type(), output);
  }

  // optional string type_str = 6 [default = ""];
  if (has_type_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type_str().data(), this->type_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      6, this->type_str(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* EdgeDeletion::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 source = 1 [default = 0];
  if (has_source()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->source(), target);
  }

  // optional string source_str = 2 [default = ""];
  if (has_source_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->source_str().data(), this->source_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->source_str(), target);
  }

  // optional int64 destination = 3 [default = 1];
  if (has_destination()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->destination(), target);
  }

  // optional string destination_str = 4 [default = ""];
  if (has_destination_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->destination_str().data(), this->destination_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->destination_str(), target);
  }

  // optional int64 type = 5 [default = 0];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->type(), target);
  }

  // optional string type_str = 6 [default = ""];
  if (has_type_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->type_str().data(), this->type_str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->type_str(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int EdgeDeletion::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 type = 5 [default = 0];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->type());
    }

    // optional string type_str = 6 [default = ""];
    if (has_type_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->type_str());
    }

    // optional int64 source = 1 [default = 0];
    if (has_source()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->source());
    }

    // optional string source_str = 2 [default = ""];
    if (has_source_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source_str());
    }

    // optional int64 destination = 3 [default = 1];
    if (has_destination()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->destination());
    }

    // optional string destination_str = 4 [default = ""];
    if (has_destination_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->destination_str());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EdgeDeletion::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EdgeDeletion* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EdgeDeletion*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EdgeDeletion::MergeFrom(const EdgeDeletion& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_type_str()) {
      set_type_str(from.type_str());
    }
    if (from.has_source()) {
      set_source(from.source());
    }
    if (from.has_source_str()) {
      set_source_str(from.source_str());
    }
    if (from.has_destination()) {
      set_destination(from.destination());
    }
    if (from.has_destination_str()) {
      set_destination_str(from.destination_str());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EdgeDeletion::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EdgeDeletion::CopyFrom(const EdgeDeletion& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EdgeDeletion::IsInitialized() const {

  return true;
}

void EdgeDeletion::Swap(EdgeDeletion* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(type_str_, other->type_str_);
    std::swap(source_, other->source_);
    std::swap(source_str_, other->source_str_);
    std::swap(destination_, other->destination_);
    std::swap(destination_str_, other->destination_str_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EdgeDeletion::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EdgeDeletion_descriptor_;
  metadata.reflection = EdgeDeletion_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int StingerBatch::kVersionFieldNumber;
const int StingerBatch::kKeepAliveFieldNumber;
const int StingerBatch::kInsertionsFieldNumber;
const int StingerBatch::kDeletionsFieldNumber;
const int StingerBatch::kMakeUndirectedFieldNumber;
const int StingerBatch::kTypeFieldNumber;
#endif  // !_MSC_VER

StingerBatch::StingerBatch()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void StingerBatch::InitAsDefaultInstance() {
}

StingerBatch::StingerBatch(const StingerBatch& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void StingerBatch::SharedCtor() {
  _cached_size_ = 0;
  version_ = GOOGLE_LONGLONG(1);
  keep_alive_ = false;
  make_undirected_ = true;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StingerBatch::~StingerBatch() {
  SharedDtor();
}

void StingerBatch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StingerBatch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StingerBatch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StingerBatch_descriptor_;
}

const StingerBatch& StingerBatch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_src_2fproto_2fstinger_2dbatch_2eproto();
  return *default_instance_;
}

StingerBatch* StingerBatch::default_instance_ = NULL;

StingerBatch* StingerBatch::New() const {
  return new StingerBatch;
}

void StingerBatch::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    version_ = GOOGLE_LONGLONG(1);
    keep_alive_ = false;
    make_undirected_ = true;
    type_ = 0;
  }
  insertions_.Clear();
  deletions_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool StingerBatch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int64 version = 1 [default = 1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_insertions;
        break;
      }

      // repeated .gt.stinger.EdgeInsertion insertions = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_insertions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_insertions()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_insertions;
        if (input->ExpectTag(34)) goto parse_deletions;
        break;
      }

      // repeated .gt.stinger.EdgeDeletion deletions = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_deletions:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_deletions()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_deletions;
        if (input->ExpectTag(40)) goto parse_make_undirected;
        break;
      }

      // optional bool make_undirected = 5 [default = true];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_make_undirected:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &make_undirected_)));
          set_has_make_undirected();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_type;
        break;
      }

      // optional .gt.stinger.BatchType type = 6 [default = NUMBERS_ONLY];
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::gt::stinger::BatchType_IsValid(value)) {
            set_type(static_cast< ::gt::stinger::BatchType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_keep_alive;
        break;
      }

      // optional bool keep_alive = 7 [default = false];
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_keep_alive:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &keep_alive_)));
          set_has_keep_alive();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void StingerBatch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int64 version = 1 [default = 1];
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->version(), output);
  }

  // repeated .gt.stinger.EdgeInsertion insertions = 3;
  for (int i = 0; i < this->insertions_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->insertions(i), output);
  }

  // repeated .gt.stinger.EdgeDeletion deletions = 4;
  for (int i = 0; i < this->deletions_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->deletions(i), output);
  }

  // optional bool make_undirected = 5 [default = true];
  if (has_make_undirected()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(5, this->make_undirected(), output);
  }

  // optional .gt.stinger.BatchType type = 6 [default = NUMBERS_ONLY];
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->type(), output);
  }

  // optional bool keep_alive = 7 [default = false];
  if (has_keep_alive()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(7, this->keep_alive(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* StingerBatch::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int64 version = 1 [default = 1];
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->version(), target);
  }

  // repeated .gt.stinger.EdgeInsertion insertions = 3;
  for (int i = 0; i < this->insertions_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->insertions(i), target);
  }

  // repeated .gt.stinger.EdgeDeletion deletions = 4;
  for (int i = 0; i < this->deletions_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->deletions(i), target);
  }

  // optional bool make_undirected = 5 [default = true];
  if (has_make_undirected()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(5, this->make_undirected(), target);
  }

  // optional .gt.stinger.BatchType type = 6 [default = NUMBERS_ONLY];
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->type(), target);
  }

  // optional bool keep_alive = 7 [default = false];
  if (has_keep_alive()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(7, this->keep_alive(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int StingerBatch::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int64 version = 1 [default = 1];
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->version());
    }

    // optional bool keep_alive = 7 [default = false];
    if (has_keep_alive()) {
      total_size += 1 + 1;
    }

    // optional bool make_undirected = 5 [default = true];
    if (has_make_undirected()) {
      total_size += 1 + 1;
    }

    // optional .gt.stinger.BatchType type = 6 [default = NUMBERS_ONLY];
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

  }
  // repeated .gt.stinger.EdgeInsertion insertions = 3;
  total_size += 1 * this->insertions_size();
  for (int i = 0; i < this->insertions_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->insertions(i));
  }

  // repeated .gt.stinger.EdgeDeletion deletions = 4;
  total_size += 1 * this->deletions_size();
  for (int i = 0; i < this->deletions_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->deletions(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StingerBatch::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const StingerBatch* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const StingerBatch*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StingerBatch::MergeFrom(const StingerBatch& from) {
  GOOGLE_CHECK_NE(&from, this);
  insertions_.MergeFrom(from.insertions_);
  deletions_.MergeFrom(from.deletions_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_keep_alive()) {
      set_keep_alive(from.keep_alive());
    }
    if (from.has_make_undirected()) {
      set_make_undirected(from.make_undirected());
    }
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void StingerBatch::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StingerBatch::CopyFrom(const StingerBatch& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StingerBatch::IsInitialized() const {

  return true;
}

void StingerBatch::Swap(StingerBatch* other) {
  if (other != this) {
    std::swap(version_, other->version_);
    std::swap(keep_alive_, other->keep_alive_);
    insertions_.Swap(&other->insertions_);
    deletions_.Swap(&other->deletions_);
    std::swap(make_undirected_, other->make_undirected_);
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata StingerBatch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StingerBatch_descriptor_;
  metadata.reflection = StingerBatch_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace stinger
}  // namespace gt

// @@protoc_insertion_point(global_scope)
